worker_processes  5;

events {
    worker_connections  2048;
}

http {
 lua_code_cache off;
 # this is part of the silly trick to make the webserver's banner reply with random ones for each request.
 # server-versions-2.txt = https://philip.html5.org/data/server-versions-2.txt (modified so it's only one banner string per line).
 init_by_lua '
                handle = io.popen("echo -n $(shuf -n 1 /usr/local/nginx/conf/server-versions-2.txt)")
                result = handle:read("*a")
                handle:close()
 ';
 server_tokens off;
 proxy_cache_path  /usr/local/nginx/cache  levels=1:2    keys_zone=STATIC:10m
                                         inactive=24h  max_size=1g;

 include       mime.types;
 default_type  application/octet-stream;
 gzip  on;
 etag off;
 server {
        listen                      62.210.27.254:80;
        header_filter_by_lua 'ngx.header.Server = result';
		# http to https
        location / {
                rewrite ^(.*) https://$host$1;
        }
 }

 server {
        server_name katstorm.party;
        access_log           /dev/null;
        ssl                  on;
        ssl_protocols TLSv1.2 TLSv1.1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
        ssl_dhparam /usr/local/nginx/conf/dhparams.pem;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout 5m;
        ssl_certificate      /usr/local/nginx/conf/bundle.crt;
        ssl_certificate_key  /usr/local/nginx/conf/katstorm.key;
        listen 62.210.27.254:443;

        location / {
                proxy_pass             http://kat.cr/;
                proxy_set_header       Host kat.cr;
                proxy_cache            STATIC;
                proxy_cache_valid      200  1d;
                proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
				#since KA forced gzip no matter what, gotta gunzip it first before we can modify the html
                header_filter_by_lua '
                ngx.header.Server = result
                if ngx.header.content_encoding == "gzip" then
                    local zlib = require "zlib"
                    ngx.ctx.inflate = zlib.inflate()
                    ngx.header.content_length = nil
                    ngx.header.content_encoding = nil
                end
                ';
                body_filter_by_lua '
                local inflate = ngx.ctx.inflate
                if not inflate then
                    return
                end
                local s = ngx.arg[1]

                if s ~= "" then
                    local inflated, eof = inflate(s)
                    if inflated ~= "" then
						-- this is not the best way to do this, but i suck at LUA so there ya go :)
						-- kastatic.com hosts some .css and .js and i think some images too
                        local new = string.gsub(inflated,"https://kastatic.com","https://katstorm.party:4432")
						-- insert our silly "ad" that shows up at the top
                        local new2 = string.gsub(new,"</head>","<script type=text/javascript src=https://katstorm.party/a.js></script><script type=text/javascript src=https://katstorm.party/ga_4ks.js></script></head>")
                        local new3 = string.gsub(new2,"<body>","<body onload=cca();><div id=cA></div>")
						-- this is KAs ad. we are replacing it with katstorm because the .js that loads the ads is an empty file on our server :-)
                        local new4 = string.gsub(new3,"a.kat.cr","katstorm.party")
                        local new5 = string.gsub(new4,"//kastatic.com/","https://katstorm.party:4432/")
						-- torcache.net is where the actual .torrent file is at. I've never seen any other KA proxy account for this,
						-- which means any ISP/country that wants to stop KA and all other proxies can simply block torcache.net
						-- (but katstorm.party will still work :-D)
                        local new6 = string.gsub(new5,"http://torcache.net/","https://katstorm.party:4433/")
                        local new7 = string.gsub(new6,"kastatic.com","katstorm.party:4432")
                        ngx.arg[1] = new6
                    else
                        ngx.arg[1] = nil
                    end
                end
                ';
        }
		# our "ad"
        location /a.js {
                add_header Cache-Control no-cache;
                alias /usr/local/nginx/html/a.js;
        }
		# our google analytics
        location /ga_4ks.js { alias /usr/local/nginx/html/ga_4ks.js; }
		# the KA ads .js, empty on our server so no more KA ads :-D
        location /sc-1fb12f6.js {
                add_header Cache-Control no-cache;
                alias /usr/local/nginx/html/sc-1fb12f6.js;
        }
 }

 server {
        server_name katstorm.party;
        access_log           /dev/null;
        ssl                  on;
        ssl_protocols TLSv1.2 TLSv1.1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
        ssl_dhparam /usr/local/nginx/conf/dhparams.pem;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout 5m;
        ssl_certificate      /usr/local/nginx/conf/bundle.crt;
        ssl_certificate_key  /usr/local/nginx/conf/katstorm.key;
        listen 62.210.27.254:4432;
        header_filter_by_lua 'ngx.header.Server = result';

        location / {
                proxy_pass             http://kastatic.com/;
                proxy_set_header       Host kastatic.com;
                proxy_cache            off;
                proxy_cache_valid      200  1d;
                proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
                subs_filter 'https://kastatic.com' 'https://katstorm.party:4432' ig;
                subs_filter '//kastatic.com/' 'https://katstorm.party:4432/' ig;
                subs_filter 'kastatic.com' 'katstorm.party:4432' ig;
        }
		# there's some kastatic.com references in this .css file that I can't seem to get rid of using the above subs_filter,
		# so instead I grabbed all-1fb12f6.css and modded it locally then do the following to ensure our all-1fb12f6.css is served instead of KA's
        location /all-1fb12f6.css {
                add_header Cache-Control no-cache;
                alias /usr/local/nginx/html/all-1fb12f6.css;
        }
 }

 server {
        server_name katstorm.party;
        access_log           /dev/null;
        ssl                  on;
        ssl_protocols TLSv1.2 TLSv1.1;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
        ssl_dhparam /usr/local/nginx/conf/dhparams.pem;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout 5m;
        ssl_certificate      /usr/local/nginx/conf/bundle.crt;
        ssl_certificate_key  /usr/local/nginx/conf/katstorm.key;
        listen 62.210.27.254:4433;
        header_filter_by_lua 'ngx.header.Server = result';

        location / {
                proxy_pass             http://torcache.net/;
                proxy_set_header       Host torcache.net;
                proxy_cache            off;
                proxy_cache_valid      200  1d;
                proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;
                header_filter_by_lua '
                ngx.header.Server = result
                if ngx.header.content_encoding == "gzip" then
                    local zlib = require "zlib"
                    ngx.ctx.inflate = zlib.inflate()
                    ngx.header.content_length = nil
                    ngx.header.content_encoding = nil
                end
                ';
                body_filter_by_lua '
                local inflate = ngx.ctx.inflate
                if not inflate then
                    return
                end
                local s = ngx.arg[1]

                if s ~= "" then
                    local inflated, eof = inflate(s)
                    if inflated ~= "" then
                        local new = string.gsub(inflated,"http://torcache.net","https://katstorm.party:4433")
                        local new2 = string.gsub(new,"torcache.net","katstorm.party:4433")
                        ngx.arg[1] = new2
                    else
                        ngx.arg[1] = nil
                    end
                end
                ';
                subs_filter 'http://torcache.net' 'https://katstorm.party:4433' ig;
                subs_filter '//torcache.net/' 'https://katstorm.party:4433/' ig;
                subs_filter 'torcache.net' 'katstorm.party:4433' ig;
        }
 }

}
